// Generated by CoffeeScript 1.9.3
(function() {
  var BTree, Person, Policeman, a, add, app, b, block, count, foods, i, j, k, key, minus, p, ref, table, val, x, y,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  for (i = j = 1; j <= 5; i = ++j) {
    print("Odelay!");
  }

  add = function(x, y) {
    return x + y;
  };

  print(add(2, 4));

  while (true) {
    print('quaff');
  }

  print(['cheese', 'bread', 'mayo'][1]);

  print({
    language: 'Potion',
    pointless: true
  }['language']);

  minus = function(x, y) {
    return x - y;
  };

  minus(6, 10);

  foods = ['cheese', 'bread', 'mayo'];

  foods[2];

  ref = {
    dog: 'canine',
    cat: 'feline',
    fox: 'vulpine'
  };
  for (key in ref) {
    val = ref[key];
    print(key + " is a " + val);
  }

  Person = (function() {
    function Person() {}

    Person.prototype.print = function() {
      return print("My name is " + this.name + ".");
    };

    return Person;

  })();

  p = new Person;

  print(p.name);

  Policeman = (function(superClass) {
    extend(Policeman, superClass);

    function Policeman() {
      return Policeman.__super__.constructor.apply(this, arguments);
    }

    (function(rank) {
      this.rank = rank;
    });

    Policeman.prototype.print = function() {
      return print("My name is " + this.name + " and I'm a " + this.rank + ".");
    };

    return Policeman;

  })(Person);

  print(new Policeman('Constable'));

  app = {
    window: {
      width: 200,
      height: 200
    },
    para: 'Welcome.',
    button: 'OK'
  };

  app.window;

  x = 1;

  y = 2;

  x = 1;

  y = 2;

  table = {
    language: 'Potion',
    pointless: true
  };

  String.prototype.length = function() {
    return 10;
  };

  block = function() {
    return print('potion');
  };

  if (age > 100) {
    'ancient';
  }

  switch (author) {
    case 'Jonathan Strange & Mr. Norrell':
      'Susanna Clarke';
      break;
    case 'The Star Diaries':
      'Stanislaw Lem';
      break;
    case 'The Slynx':
      'Tatyana Tolstaya';
      break;
    default:
      '... probably Philip K. Dick';
  }

  count = 8;

  while (count > 0) {
    print('quaff');
    count--;
  }

  for (a = k = 1; k <= 5; a = ++k) {
    print(a);
  }

  if (3..gender != null) {
    print("Huh? Numbers are sexed? That's amazing.");
  }

  HomePage.prototype.get = function(url) {
    var ref1, session;
    return session = (ref1 = url.query) != null ? ref1.session : void 0;
  };

  BTree = function() {};

  b = new BTree;

  b.left = new BTree;

  b.right = new BTree;

  BTree = function() {};

  b = new BTree;

  if (b.left != null) {
    print('left path found!');
  }

}).call(this);

//# sourceMappingURL=potion.js.map
